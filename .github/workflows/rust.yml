name: Rust
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: '${{ runner.os }}-cargo-registry-${{ hashFiles(''**/Cargo.lock'') }}'
    - uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: '${{ runner.os }}-cargo-index-${{ hashFiles(''**/Cargo.lock'') }}'
    - uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}V

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - name: Build
      if: ${{ !env.ACT }}
      run: cargo build --verbose
    - name: Run tests
      env:
        CARGO_INCREMENTAL: '0'
        RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
        RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
        TIME_TO_START: 1
      run: mkdir dbs&&cargo test -- --test-threads=1 # threads=1 to avoid the problem with the in disk tests
    - name: Codecov
      # You may pin to the exact commit or the version.
      # uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_ORG_TOKEN }}
      with:
        # Repository upload token - get it from codecov.io. Required only for private repositories
        # token: # optional
        # Specify whether the Codecov output should be verbose
        verbose: true
        fail_ci_if_error: true
